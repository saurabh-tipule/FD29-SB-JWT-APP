spring.application.name=SpringBoot-JWT-Authentication-App

spring.banner.mode=off

server.port=9090

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url =jdbc:mysql://localhost:3306/FD29
spring.datasource.username =root
spring.datasource.password =root

spring.jpa.hibernate.ddl-auto =update
spring.jpa.show-sql=true

logging.file.name=myLog.log

spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

spring.jpa.format_sql=true


# SpringBoot JWT Authentication Applcation Dependency POM.xml 

# Spring Data JPA
# Spring Web
# MYSQL
# lombok
# Security
# JJWT



# Application Component

#1. UserInfo.java (Entity)

#2. UserInfoService.java( service Layer- Business Logic)

#3. UserRepository.java ( Repository layer)

#4. UserController.java ( RestController - Rest-API )
    # addnewUser
    # login
    
#5. JwtService.java   ( Generate token and Validate Token)
    # generateToken()
    # validateToken()   


#5. SecurityConfig.java ( Security Configuration )
    # BCryptPasswordEncoder  bean
    # AuthenticationProvider bean
    # AuthenticationManager bean 
    # JwtAuthFilter  bean
    # SecurityFilterChain  bean
    

 
#7. JwtAuthFilter.java 
    # This filter will execute when the request comes for Secured URL.
    # It will check token is present in request or not.
    # if token is not available , it is invalid reuqest ,send error response.
    # If token is available then read the token and validate token
    # If token is validated , then request will be processesd.
    # If token is invalid , then request will not be processes , send error response.
    
#Note : Client Application should send the JWT token  to provider  in below format.
  
# Authorization = Bearer xxxxx.yyyyy.zzzzz         
 
    
         